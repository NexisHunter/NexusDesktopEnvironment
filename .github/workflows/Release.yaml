name: Release

on:
  schedule:
    - cron: '* 12 * * MON' # Create a release on Mondays at noon

env:
  VERSION: ''

jobs:
  build:
    runs-on: ubuntu-latest
    image: nexishunter/docker_flutter
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Collect Version
        run: |
          # Pull out the version that can be found in the pubspec.
          version=$(echo -e "pubspec.yaml" | grep "version:" | cut -f2 -d' ')
          echo "::set-env VERSION=${version}"
      - name: Build Release
        run: |
          flutter build linux
          cd build/linux/release/bundle
          zip -r linux.zip ./
          mv linux.zip ../../../../
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ VERSION }}
          release_name: Release ${{ VERSION }}
          draft: false
          prerelease: true
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./linux.zip
          asset_name: nexus-desktop-environment.zip
          asset_content_type: application/zip
